# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from proto.product import product_pb2 as proto_dot_product_dot_product__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/product/product_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProductServiceStub(object):
    """Product service definition for internal microservice communication
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProduct = channel.unary_unary(
                '/product.v1.ProductService/CreateProduct',
                request_serializer=proto_dot_product_dot_product__pb2.CreateProductRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.CreateProductResponse.FromString,
                _registered_method=True)
        self.GetProduct = channel.unary_unary(
                '/product.v1.ProductService/GetProduct',
                request_serializer=proto_dot_product_dot_product__pb2.GetProductRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.GetProductResponse.FromString,
                _registered_method=True)
        self.GetProducts = channel.unary_unary(
                '/product.v1.ProductService/GetProducts',
                request_serializer=proto_dot_product_dot_product__pb2.GetProductsRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.GetProductsResponse.FromString,
                _registered_method=True)
        self.UpdateProduct = channel.unary_unary(
                '/product.v1.ProductService/UpdateProduct',
                request_serializer=proto_dot_product_dot_product__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.UpdateProductResponse.FromString,
                _registered_method=True)
        self.UpdateProductStock = channel.unary_unary(
                '/product.v1.ProductService/UpdateProductStock',
                request_serializer=proto_dot_product_dot_product__pb2.UpdateProductStockRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.UpdateProductStockResponse.FromString,
                _registered_method=True)
        self.UpdateProductPrice = channel.unary_unary(
                '/product.v1.ProductService/UpdateProductPrice',
                request_serializer=proto_dot_product_dot_product__pb2.UpdateProductPriceRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.UpdateProductPriceResponse.FromString,
                _registered_method=True)
        self.DeleteProduct = channel.unary_unary(
                '/product.v1.ProductService/DeleteProduct',
                request_serializer=proto_dot_product_dot_product__pb2.DeleteProductRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.DeleteProductResponse.FromString,
                _registered_method=True)
        self.CheckProductAvailability = channel.unary_unary(
                '/product.v1.ProductService/CheckProductAvailability',
                request_serializer=proto_dot_product_dot_product__pb2.CheckProductAvailabilityRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.CheckProductAvailabilityResponse.FromString,
                _registered_method=True)
        self.ReserveProducts = channel.unary_unary(
                '/product.v1.ProductService/ReserveProducts',
                request_serializer=proto_dot_product_dot_product__pb2.ReserveProductsRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.ReserveProductsResponse.FromString,
                _registered_method=True)
        self.ConfirmReservation = channel.unary_unary(
                '/product.v1.ProductService/ConfirmReservation',
                request_serializer=proto_dot_product_dot_product__pb2.ConfirmReservationRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.ConfirmReservationResponse.FromString,
                _registered_method=True)
        self.CancelReservation = channel.unary_unary(
                '/product.v1.ProductService/CancelReservation',
                request_serializer=proto_dot_product_dot_product__pb2.CancelReservationRequest.SerializeToString,
                response_deserializer=proto_dot_product_dot_product__pb2.CancelReservationResponse.FromString,
                _registered_method=True)


class ProductServiceServicer(object):
    """Product service definition for internal microservice communication
    """

    def CreateProduct(self, request, context):
        """Create a new product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Get product by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProducts(self, request, context):
        """Get products with pagination and filters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Update product information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductStock(self, request, context):
        """Update product stock
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductPrice(self, request, context):
        """Update product price
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Delete product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckProductAvailability(self, request, context):
        """Check product availability
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveProducts(self, request, context):
        """Reserve products for order (reduces stock temporarily)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmReservation(self, request, context):
        """Confirm product reservation (finalizes stock reduction)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelReservation(self, request, context):
        """Cancel product reservation (restores stock)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=proto_dot_product_dot_product__pb2.CreateProductRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.CreateProductResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=proto_dot_product_dot_product__pb2.GetProductRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.GetProductResponse.SerializeToString,
            ),
            'GetProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProducts,
                    request_deserializer=proto_dot_product_dot_product__pb2.GetProductsRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.GetProductsResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=proto_dot_product_dot_product__pb2.UpdateProductRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.UpdateProductResponse.SerializeToString,
            ),
            'UpdateProductStock': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductStock,
                    request_deserializer=proto_dot_product_dot_product__pb2.UpdateProductStockRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.UpdateProductStockResponse.SerializeToString,
            ),
            'UpdateProductPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductPrice,
                    request_deserializer=proto_dot_product_dot_product__pb2.UpdateProductPriceRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.UpdateProductPriceResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=proto_dot_product_dot_product__pb2.DeleteProductRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.DeleteProductResponse.SerializeToString,
            ),
            'CheckProductAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckProductAvailability,
                    request_deserializer=proto_dot_product_dot_product__pb2.CheckProductAvailabilityRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.CheckProductAvailabilityResponse.SerializeToString,
            ),
            'ReserveProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveProducts,
                    request_deserializer=proto_dot_product_dot_product__pb2.ReserveProductsRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.ReserveProductsResponse.SerializeToString,
            ),
            'ConfirmReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmReservation,
                    request_deserializer=proto_dot_product_dot_product__pb2.ConfirmReservationRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.ConfirmReservationResponse.SerializeToString,
            ),
            'CancelReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelReservation,
                    request_deserializer=proto_dot_product_dot_product__pb2.CancelReservationRequest.FromString,
                    response_serializer=proto_dot_product_dot_product__pb2.CancelReservationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'product.v1.ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('product.v1.ProductService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Product service definition for internal microservice communication
    """

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/CreateProduct',
            proto_dot_product_dot_product__pb2.CreateProductRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.CreateProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/GetProduct',
            proto_dot_product_dot_product__pb2.GetProductRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.GetProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/GetProducts',
            proto_dot_product_dot_product__pb2.GetProductsRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.GetProductsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/UpdateProduct',
            proto_dot_product_dot_product__pb2.UpdateProductRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.UpdateProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProductStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/UpdateProductStock',
            proto_dot_product_dot_product__pb2.UpdateProductStockRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.UpdateProductStockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProductPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/UpdateProductPrice',
            proto_dot_product_dot_product__pb2.UpdateProductPriceRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.UpdateProductPriceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/DeleteProduct',
            proto_dot_product_dot_product__pb2.DeleteProductRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.DeleteProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckProductAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/CheckProductAvailability',
            proto_dot_product_dot_product__pb2.CheckProductAvailabilityRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.CheckProductAvailabilityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReserveProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/ReserveProducts',
            proto_dot_product_dot_product__pb2.ReserveProductsRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.ReserveProductsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/ConfirmReservation',
            proto_dot_product_dot_product__pb2.ConfirmReservationRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.ConfirmReservationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.v1.ProductService/CancelReservation',
            proto_dot_product_dot_product__pb2.CancelReservationRequest.SerializeToString,
            proto_dot_product_dot_product__pb2.CancelReservationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
